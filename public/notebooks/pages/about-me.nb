{
  "cells": [
    {
      "cell_type": "markdown",
      "source": "<p>Hi, I‚Äôm Yash!</p>\n"
    },
    {
      "cell_type": "markdown",
      "source": "<h2>Introduction</h2>\n<p>I am a software engineer, hardware hacker and security researcher who enjoys solving hard problems, breaking things (ethically), and making systems faster, safer, and more efficient through algorithmic improvements and removing complexities.</p>\n<p>It is my strong belief that code is a liability, not an asset. My primary focus in software engineering has been on how to do more with less.</p>\n"
    },
    {
      "cell_type": "markdown",
      "source": "<h2>What I‚Äôm Working on</h2>\n<ol>\n<li>üåê This website. While I‚Äôm not a web developer by interest, I built this website to showcase my skills and provide an outlet to write articles as I research and learn.</li>\n<li>‚õï DataFlo. DataFlo is a streaming data microservices library meant to connect services together with high throughput, low latency and <em>optional</em> reliability communication methods.</li>\n<li>üí≤ Automatic market research and trading through large scale data scraping and multi-modal RL</li>\n</ol>\n<p>I‚Äôm also working on a few other projects but they are not open source.</p>\n"
    },
    {
      "cell_type": "markdown",
      "source": "<h2>What I‚Äôm Learning</h2>\n<ul>\n<li>React / Next.js (for this website)</li>\n<li>iOS app development (for some startup ideas I have)</li>\n</ul>\n"
    },
    {
      "cell_type": "markdown",
      "source": "<h2>Interests</h2>\n<ul>\n<li>Low-latency systems and HFT</li>\n<li>Cybersecurity and red teaming</li>\n<li>Reverse engineering and exploit development</li>\n<li>System hardening through KISS</li>\n<li>Hardware acceleration, through CUDA, OpenCL, OpenACC, FPGAs</li>\n<li>Artificial Intelligence\n<ul>\n<li>Traditional computer vision (non-ML)</li>\n<li>CNNs, ConvLSTM, RNN, RL, Agentic AI (primarily though RL), LLMs</li>\n</ul>\n</li>\n<li>Large scale data analysis</li>\n<li>Search and large scale data structures</li>\n<li>Embedded systems (Microcontrollers, SoCs, FreeRTOS, Linux)</li>\n</ul>\n"
    },
    {
      "cell_type": "markdown",
      "source": "<h2>Experience</h2>\n"
    },
    {
      "cell_type": "markdown",
      "source": "<h3>American Express, inc.</h3>\n<ul>\n<li>Critical company-wide infrastructure and application cybersecurity (sandbox escape, network security, application security, reentrant bugs), with exploit writing to prove my findings</li>\n<li>Played a key role in revamping the AtWork card management portal and delivering it to market</li>\n<li>Led the resilience / high availability testing of the entire AtWork @ American Express architecture, targeting legacy applications. Worked to improve the replication strategy of our main database and provided notes to overhaul the fault tolerance and failover behavior of legacy apps</li>\n<li>Wrote automatic script to set up dev systems and automatically fix issues within 30 minutes</li>\n<li>Wrote a fault-tolerant Jenkins build automation tool to trigger serial builds (easily 30+ builds), saving 3-6 hours of developer time on each deployment of legacy applications, while reducing the chance of error.</li>\n<li>Wrote the browser automation tests for AtWork homepage and card management legacy apps, introducing browser automation testing into my org for the first time</li>\n<li>Achieved 100% unit test coverage and decent PIT scores for most of my code</li>\n<li>Coordinated 1+ budgeted colleague engagement event per month, celebrating our accomplishments and our employees</li>\n</ul>\n"
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3 (ipykernel)",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.13.1"
    },
    "img": {},
    "pageinfo": {
      "root": "pages",
      "name": "about-me",
      "page": 6,
      "title": "About Me",
      "subtitle": "Hi, I'm Yash!",
      "isPublished": true,
      "author": "yash101",
      "publishedOn": "2025-02-03T04:57:57.694Z",
      "lastModifiedOn": "2025-02-03T04:57:57.694Z"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5,
  "additionalRawHtml": "\n<style type=\"text/css\">\nmjx-container[jax=\"SVG\"] > svg {\n  display: inline;\n  z-index: 0;\n  max-width: 100%;\n  overflow-x: auto;\n}\n\nmjx-container[jax=\"SVG\"] {\n  direction: ltr;\n}\n\nmjx-container[jax=\"SVG\"] > svg {\n  overflow: visible;\n  min-height: 1px;\n  min-width: 1px;\n}\n\nmjx-container[jax=\"SVG\"] > svg a {\n  fill: blue;\n  stroke: blue;\n}\n\nmjx-assistive-mml {\n  position: absolute !important;\n  top: 0px;\n  left: 0px;\n  clip: rect(1px, 1px, 1px, 1px);\n  padding: 1px 0px 0px 0px !important;\n  border: 0px !important;\n  display: block !important;\n  width: auto !important;\n  overflow: hidden !important;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\nmjx-assistive-mml[display=\"block\"] {\n  width: 100% !important;\n}\n\nmjx-container[jax=\"SVG\"][display=\"true\"] {\n  display: block;\n  text-align: center;\n  margin: 1em 0;\n}\n\nmjx-container[jax=\"SVG\"][display=\"true\"][width=\"full\"] {\n  display: flex;\n}\n\nmjx-container[jax=\"SVG\"][justify=\"left\"] {\n  text-align: left;\n}\n\nmjx-container[jax=\"SVG\"][justify=\"right\"] {\n  text-align: right;\n}\n\ng[data-mml-node=\"merror\"] > g {\n  fill: red;\n  stroke: red;\n}\n\ng[data-mml-node=\"merror\"] > rect[data-background] {\n  fill: yellow;\n  stroke: none;\n}\n\ng[data-mml-node=\"mtable\"] > line[data-line], svg[data-table] > g > line[data-line] {\n  stroke-width: 70px;\n  fill: none;\n}\n\ng[data-mml-node=\"mtable\"] > rect[data-frame], svg[data-table] > g > rect[data-frame] {\n  stroke-width: 70px;\n  fill: none;\n}\n\ng[data-mml-node=\"mtable\"] > .mjx-dashed, svg[data-table] > g > .mjx-dashed {\n  stroke-dasharray: 140;\n}\n\ng[data-mml-node=\"mtable\"] > .mjx-dotted, svg[data-table] > g > .mjx-dotted {\n  stroke-linecap: round;\n  stroke-dasharray: 0,140;\n}\n\ng[data-mml-node=\"mtable\"] > g > svg {\n  overflow: visible;\n}\n\n[jax=\"SVG\"] mjx-tool {\n  display: inline-block;\n  position: relative;\n  width: 0;\n  height: 0;\n}\n\n[jax=\"SVG\"] mjx-tool > mjx-tip {\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\nmjx-tool > mjx-tip {\n  display: inline-block;\n  padding: .2em;\n  border: 1px solid #888;\n  font-size: 70%;\n  background-color: #F8F8F8;\n  color: black;\n  box-shadow: 2px 2px 5px #AAAAAA;\n}\n\ng[data-mml-node=\"maction\"][data-toggle] {\n  cursor: pointer;\n}\n\nmjx-status {\n  display: block;\n  position: fixed;\n  left: 1em;\n  bottom: 1em;\n  min-width: 25%;\n  padding: .2em .4em;\n  border: 1px solid #888;\n  font-size: 90%;\n  background-color: #F8F8F8;\n  color: black;\n}\n\nforeignObject[data-mjx-xml] {\n  font-family: initial;\n  line-height: normal;\n  overflow: visible;\n}\n\nmjx-container[jax=\"SVG\"] path[data-c], mjx-container[jax=\"SVG\"] use[data-c] {\n  stroke-width: 3;\n}\n\n</style>\n    "
}